---
interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" href="/favicon.ico" />
		<meta name="generator" content={Astro.generator} />
		
		<title>{title}</title>
	</head>
	<body>
		<main>
			<slot />
		</main>

		
	</body>
</html>
<style is:global>
	html {
		font-family: sans-serif;
		background: #010409;
		color: #fff;
		/* background: #1D2A35; */

	}

	main {
		position: relative;
	}

	main {
		width: 500px;
		margin: 0 auto;
	}

	.fade-right {
		opacity: 0;
		filter: blur(5px);
		transform: translateY(40%);
		transition: opacity 1s, filter 1s, transform 1s;
	}

	.fade-none {
		opacity: 1;
		filter: blur(0);
		transform: translateX(0);
	}

	@media(prefers-reduced-motion) {
		.fade-right {
			transition: none;
		}
	}
</style>

<script>
	const observer = new IntersectionObserver((entries) => {
		entries.forEach((entry) => {
			if (entry.isIntersecting) {
				entry.target.classList.add('fade-none');
			} else {
				entry.target.classList.remove('fade-none');
			}
		});
	});

	const fadeRightElements = document.querySelectorAll('.fade-right');
	fadeRightElements.forEach(el => observer.observe(el));
</script>